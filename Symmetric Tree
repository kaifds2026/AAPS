class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

# Helper function to check mirror symmetry
def is_mirror(t1, t2):
    if not t1 and not t2:
        return True
    if not t1 or not t2:
        return False
    return (t1.data == t2.data and
            is_mirror(t1.left, t2.right) and
            is_mirror(t1.right, t2.left))

# Main function to check if tree is symmetric
def is_symmetric(root):
    if root is None:
        return True
    return is_mirror(root.left, root.right)

root = Node(1)
root.left = Node(2)
root.right = Node(2)
root.left.left = Node(3)
root.left.right = Node(4)
root.right.left = Node(4)
root.right.right = Node(3)

# Check symmetry
print("Is the tree symmetric?", is_symmetric(root))
